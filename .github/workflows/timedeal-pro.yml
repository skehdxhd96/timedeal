name: timedeal-dev

on:
  push:
    branches:
    - develop
#     types: [ closed ]
    
#   workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-22.04

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      
      - name: Set Up Java 11
        uses: actions/setup-java@v1
        with:
          distribution: 'adopt'
          java-version: '11'
          
      - name: Gradle Caching
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            ${{ runner.os }}-gradle-
          
      - name: Grant execute permisson for gradlew
        run: chmod +x gradlew
        shell: bash

      - name: Build with Gradle
        run: ./gradlew clean build -x test
        shell: bash
      
      - name: Login to DockerHub
        uses: docker/login-action@v1.8.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          
      - name: Build and push Docker images
        uses: docker/build-push-action@v2.4.0
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DEV_IMAGE_NAME }}:latest
          
      - name: executing remote ssh commands using ssh key
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          port: ${{ secrets.PORT }}
          script: |
            sudo docker rm -f ${{ secrets.CONTAINER }}
            sudo docker pull ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DEV_IMAGE_NAME }}:latest
            sudo docker run -d -t --name ${{ secrets.CONTAINER }} -p 80:8080 -e JAVA_OPTS="-javaagent:/home/dongmin.na/pinpoint-agent/pinpoint-bootstrap-1.8.1.jar -Dpinpoint.applicationName=timedeal -Dpinpoint.agentId=timedeal01" ${{ secrets.DOCKERHUB_USERNAME }}/${{ secrets.DEV_IMAGE_NAME }}:latest
